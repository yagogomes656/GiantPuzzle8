#Solução pela soma de partes

#Pacote usado para trabalhar com números muito grandes e brutais
#install.packages('gmp')
library(gmp)

# Essa solução parte da ideia de que o número de susuwatari removidos de um quarto quadrado de dimensões dxd
# é igual à solução de um quarto (d-1)x(d-1) + os susuwatari removidos das laterais + a remoção de retângulos
# intermediários no problema.

# O primeiro passo foi descobrir a solução para retângulos de dimensão mxn

# Para isso, percebeu-se que a solução de um retânguo mxn nada mais é do que 1 + a solução de um retângulo (m-1)xn
# + a solução de um retângulo mx(n-1)

dim = 2021

p_linha = c(1:dim)

sol_ret = matrix(0,dim,dim)
sol_ret[,1] = p_linha
sol_ret[1,] = p_linha

m = 2
n=2

for (m in 2:dim){
  for (n in 2:dim){
    
    sol_ret[m,n] = as.character(gmp::as.bigz(sol_ret[m-1,n]) + gmp::as.bigz(sol_ret[m, n-1]) + gmp::as.bigz(1))
                            
    #sol_ret[m,n] = 1 + sol_ret[m-1,n] + sol_ret[m, n-1]
  }
}

# Criar agora a matriz cuja número da linha corresponde ao tamanho do quarto
# Para facilitar meu raciocínio agrupei as soluções dos triângulos necessários para cada dimensão de quarto,
# bem como a solução de um quarto de dimensão imediatamente menor, e também a solução dos susuwatari de seu
# perímetro.

quarto = 2021

giant = matrix(0,quarto,quarto)

giant[1,1] = 1
giant[1,2] = 1

o =2

while (o<quarto+1){
  
  giant[o,2] = 1 + 4 * (o-1)     #Calcula o quantos susuwataris são removidos pelo perímetro do quarto
  o = o +1
}

#Colunas 4 até 2021, retiradas da matriz de solução dos retângulos

k = l = 4

while (k<quarto+1){
  while (l<quarto+1){
    giant[l,k] = as.character(gmp::as.bigz(sol_ret[l-1,k-2]) + gmp::as.bigz(sol_ret[l-1,k-2]))
    #giant[l,k] = as.bigz(2) * as.bigz(sol_ret[l-1,k-2])
    l = l + 1
  }
  k = k + 1
  l = 4
}

p = 2

while (p<quarto+1){
  
  aloc = 0
  
  for (w in 2:p){
    aloc = as.character(gmp::as.bigz(aloc) + gmp::as.bigz(giant[p,w]))
    #aloc = as.bigz(aloc) + as.bigz(giant[p,w])    #Somatório dos percursos totais
}
  giant[p,1] = aloc
  giant[p+1,3] = as.character(gmp::as.bigz(giant[p,1]) + gmp::as.bigz(giant[p,1]))
  #giant[p+1,3] = 2 * giant[p,1] #Percurso correspondente ao quarto de uma dimensão menor
  
  p = p+1
}

giant[2021,1] #Retorna o número de susuwataris retirados em um quarto 2021x2021

